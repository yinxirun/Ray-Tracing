#pragma once

#include "gpu/definitions.h"
#include <cstring>

/** Stores an SHA hash generated by FSHA1. */
class SHAHash
{
public:
    alignas(uint32) uint8 Hash[20];

    SHAHash()
    {
        memset(Hash, 0, sizeof(Hash));
    }

    friend bool operator==(const SHAHash &X, const SHAHash &Y)
    {
        return memcmp(&X.Hash, &Y.Hash, sizeof(X.Hash)) == 0;
    }

    friend bool operator!=(const SHAHash &X, const SHAHash &Y)
    {
        return memcmp(&X.Hash, &Y.Hash, sizeof(X.Hash)) != 0;
    }

    friend bool operator<(const SHAHash &X, const SHAHash &Y)
    {
        return memcmp(&X.Hash, &Y.Hash, sizeof(X.Hash)) < 0;
    }

    friend uint32 GetTypeHash(const SHAHash &InKey)
    {
        return *reinterpret_cast<const uint32 *>(InKey.Hash);
    }
};